//
// V1CinderVolumeSource.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation


/** Represents a cinder volume resource in Openstack. A Cinder volume must exist before mounting to a container. The volume must also be in the same region as the kubelet. Cinder volumes support ownership management and SELinux relabeling. */

public struct V1CinderVolumeSource: Codable {

    /** Filesystem type to mount. Must be a filesystem type supported by the host operating system. Examples: \&quot;ext4\&quot;, \&quot;xfs\&quot;, \&quot;ntfs\&quot;. Implicitly inferred to be \&quot;ext4\&quot; if unspecified. More info: https://examples.k8s.io/mysql-cinder-pd/README.md */
    public var fsType: String?
    /** Optional: Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts. More info: https://examples.k8s.io/mysql-cinder-pd/README.md */
    public var readOnly: Bool?
    public var secretRef: V1LocalObjectReference?
    /** volume id used to identify the volume in cinder. More info: https://examples.k8s.io/mysql-cinder-pd/README.md */
    public var volumeID: String

    public init(fsType: String?, readOnly: Bool?, secretRef: V1LocalObjectReference?, volumeID: String) {
        self.fsType = fsType
        self.readOnly = readOnly
        self.secretRef = secretRef
        self.volumeID = volumeID
    }


}

