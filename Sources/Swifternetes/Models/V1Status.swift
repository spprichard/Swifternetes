//
// V1Status.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation


/** Status is a return value for calls that don&#39;t return other objects. */

public struct V1Status: Codable {

    /** APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources */
    public var apiVersion: String?
    /** Suggested HTTP return code for this status, 0 if not set. */
    public var code: Int?
    public var details: V1StatusDetails?
    /** Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds */
    public var kind: String?
    /** A human-readable description of the status of this operation. */
    public var message: String?
    public var metadata: V1ListMeta?
    /** A machine-readable description of why this operation is in the \&quot;Failure\&quot; status. If this value is empty there is no information available. A Reason clarifies an HTTP status code but does not override it. */
    public var reason: String?
    /** Status of the operation. One of: \&quot;Success\&quot; or \&quot;Failure\&quot;. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status */
    public var status: String?

    public init(apiVersion: String?, code: Int?, details: V1StatusDetails?, kind: String?, message: String?, metadata: V1ListMeta?, reason: String?, status: String?) {
        self.apiVersion = apiVersion
        self.code = code
        self.details = details
        self.kind = kind
        self.message = message
        self.metadata = metadata
        self.reason = reason
        self.status = status
    }


}

