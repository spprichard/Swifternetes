//
// V1CephFSPersistentVolumeSource.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation


/** Represents a Ceph Filesystem mount that lasts the lifetime of a pod Cephfs volumes do not support ownership management or SELinux relabeling. */

public struct V1CephFSPersistentVolumeSource: Codable {

    /** Required: Monitors is a collection of Ceph monitors More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it */
    public var monitors: [String]
    /** Optional: Used as the mounted root, rather than the full Ceph tree, default is / */
    public var path: String?
    /** Optional: Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts. More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it */
    public var readOnly: Bool?
    /** Optional: SecretFile is the path to key ring for User, default is /etc/ceph/user.secret More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it */
    public var secretFile: String?
    public var secretRef: V1SecretReference?
    /** Optional: User is the rados user name, default is admin More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it */
    public var user: String?

    public init(monitors: [String], path: String?, readOnly: Bool?, secretFile: String?, secretRef: V1SecretReference?, user: String?) {
        self.monitors = monitors
        self.path = path
        self.readOnly = readOnly
        self.secretFile = secretFile
        self.secretRef = secretRef
        self.user = user
    }


}

