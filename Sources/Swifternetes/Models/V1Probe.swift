//
// V1Probe.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation


/** Probe describes a health check to be performed against a container to determine whether it is alive or ready to receive traffic. */

public struct V1Probe: Codable {

    public var exec: V1ExecAction?
    /** Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1. */
    public var failureThreshold: Int?
    public var httpGet: V1HTTPGetAction?
    /** Number of seconds after the container has started before liveness probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes */
    public var initialDelaySeconds: Int?
    /** How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1. */
    public var periodSeconds: Int?
    /** Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1. */
    public var successThreshold: Int?
    public var tcpSocket: V1TCPSocketAction?
    /** Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes */
    public var timeoutSeconds: Int?

    public init(exec: V1ExecAction?, failureThreshold: Int?, httpGet: V1HTTPGetAction?, initialDelaySeconds: Int?, periodSeconds: Int?, successThreshold: Int?, tcpSocket: V1TCPSocketAction?, timeoutSeconds: Int?) {
        self.exec = exec
        self.failureThreshold = failureThreshold
        self.httpGet = httpGet
        self.initialDelaySeconds = initialDelaySeconds
        self.periodSeconds = periodSeconds
        self.successThreshold = successThreshold
        self.tcpSocket = tcpSocket
        self.timeoutSeconds = timeoutSeconds
    }


}

