//
// V1ISCSIVolumeSource.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation


/** Represents an ISCSI disk. ISCSI volumes can only be mounted as read/write once. ISCSI volumes support ownership management and SELinux relabeling. */

public struct V1ISCSIVolumeSource: Codable {

    /** whether support iSCSI Discovery CHAP authentication */
    public var chapAuthDiscovery: Bool?
    /** whether support iSCSI Session CHAP authentication */
    public var chapAuthSession: Bool?
    /** Filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: \&quot;ext4\&quot;, \&quot;xfs\&quot;, \&quot;ntfs\&quot;. Implicitly inferred to be \&quot;ext4\&quot; if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#iscsi */
    public var fsType: String?
    /** Custom iSCSI Initiator Name. If initiatorName is specified with iscsiInterface simultaneously, new iSCSI interface &lt;target portal&gt;:&lt;volume name&gt; will be created for the connection. */
    public var initiatorName: String?
    /** Target iSCSI Qualified Name. */
    public var iqn: String
    /** iSCSI Interface Name that uses an iSCSI transport. Defaults to &#39;default&#39; (tcp). */
    public var iscsiInterface: String?
    /** iSCSI Target Lun number. */
    public var lun: Int
    /** iSCSI Target Portal List. The portal is either an IP or ip_addr:port if the port is other than default (typically TCP ports 860 and 3260). */
    public var portals: [String]?
    /** ReadOnly here will force the ReadOnly setting in VolumeMounts. Defaults to false. */
    public var readOnly: Bool?
    public var secretRef: V1LocalObjectReference?
    /** iSCSI Target Portal. The Portal is either an IP or ip_addr:port if the port is other than default (typically TCP ports 860 and 3260). */
    public var targetPortal: String

    public init(chapAuthDiscovery: Bool?, chapAuthSession: Bool?, fsType: String?, initiatorName: String?, iqn: String, iscsiInterface: String?, lun: Int, portals: [String]?, readOnly: Bool?, secretRef: V1LocalObjectReference?, targetPortal: String) {
        self.chapAuthDiscovery = chapAuthDiscovery
        self.chapAuthSession = chapAuthSession
        self.fsType = fsType
        self.initiatorName = initiatorName
        self.iqn = iqn
        self.iscsiInterface = iscsiInterface
        self.lun = lun
        self.portals = portals
        self.readOnly = readOnly
        self.secretRef = secretRef
        self.targetPortal = targetPortal
    }


}

