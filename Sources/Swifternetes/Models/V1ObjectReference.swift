//
// V1ObjectReference.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation


/** ObjectReference contains enough information to let you inspect or modify the referred object. */

public struct V1ObjectReference: Codable {

    /** API version of the referent. */
    public var apiVersion: String?
    /** If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: \&quot;spec.containers{name}\&quot; (where \&quot;name\&quot; refers to the name of the container that triggered the event) or if no container name is specified \&quot;spec.containers[2]\&quot; (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. */
    public var fieldPath: String?
    /** Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds */
    public var kind: String?
    /** Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names */
    public var name: String?
    /** Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/ */
    public var namespace: String?
    /** Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency */
    public var resourceVersion: String?
    /** UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids */
    public var uid: String?

    public init(apiVersion: String?, fieldPath: String?, kind: String?, name: String?, namespace: String?, resourceVersion: String?, uid: String?) {
        self.apiVersion = apiVersion
        self.fieldPath = fieldPath
        self.kind = kind
        self.name = name
        self.namespace = namespace
        self.resourceVersion = resourceVersion
        self.uid = uid
    }


}

