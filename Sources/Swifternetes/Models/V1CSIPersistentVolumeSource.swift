//
// V1CSIPersistentVolumeSource.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation


/** Represents storage that is managed by an external CSI volume driver (Beta feature) */

public struct V1CSIPersistentVolumeSource: Codable {

    public var controllerExpandSecretRef: V1SecretReference?
    public var controllerPublishSecretRef: V1SecretReference?
    /** Driver is the name of the driver to use for this volume. Required. */
    public var driver: String
    /** Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. \&quot;ext4\&quot;, \&quot;xfs\&quot;, \&quot;ntfs\&quot;. */
    public var fsType: String?
    public var nodePublishSecretRef: V1SecretReference?
    public var nodeStageSecretRef: V1SecretReference?
    /** Optional: The value to pass to ControllerPublishVolumeRequest. Defaults to false (read/write). */
    public var readOnly: Bool?
    /** Attributes of the volume to publish. */
    public var volumeAttributes: [String:String]?
    /** VolumeHandle is the unique volume name returned by the CSI volume pluginâ€™s CreateVolume to refer to the volume on all subsequent calls. Required. */
    public var volumeHandle: String

    public init(controllerExpandSecretRef: V1SecretReference?, controllerPublishSecretRef: V1SecretReference?, driver: String, fsType: String?, nodePublishSecretRef: V1SecretReference?, nodeStageSecretRef: V1SecretReference?, readOnly: Bool?, volumeAttributes: [String:String]?, volumeHandle: String) {
        self.controllerExpandSecretRef = controllerExpandSecretRef
        self.controllerPublishSecretRef = controllerPublishSecretRef
        self.driver = driver
        self.fsType = fsType
        self.nodePublishSecretRef = nodePublishSecretRef
        self.nodeStageSecretRef = nodeStageSecretRef
        self.readOnly = readOnly
        self.volumeAttributes = volumeAttributes
        self.volumeHandle = volumeHandle
    }


}

