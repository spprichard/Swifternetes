//
// V1alpha1QueuingConfiguration.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation


/** QueuingConfiguration holds the configuration parameters for queuing */

public struct V1alpha1QueuingConfiguration: Codable {

    /** &#x60;handSize&#x60; is a small positive number that configures the shuffle sharding of requests into queues.  When enqueuing a request at this priority level the request&#39;s flow identifier (a string pair) is hashed and the hash value is used to shuffle the list of queues and deal a hand of the size specified here.  The request is put into one of the shortest queues in that hand. &#x60;handSize&#x60; must be no larger than &#x60;queues&#x60;, and should be significantly smaller (so that a few heavy flows do not saturate most of the queues).  See the user-facing documentation for more extensive guidance on setting this field.  This field has a default value of 8. */
    public var handSize: Int?
    /** &#x60;queueLengthLimit&#x60; is the maximum number of requests allowed to be waiting in a given queue of this priority level at a time; excess requests are rejected.  This value must be positive.  If not specified, it will be defaulted to 50. */
    public var queueLengthLimit: Int?
    /** &#x60;queues&#x60; is the number of queues for this priority level. The queues exist independently at each apiserver. The value must be positive.  Setting it to 1 effectively precludes shufflesharding and thus makes the distinguisher method of associated flow schemas irrelevant.  This field has a default value of 64. */
    public var queues: Int?

    public init(handSize: Int?, queueLengthLimit: Int?, queues: Int?) {
        self.handSize = handSize
        self.queueLengthLimit = queueLengthLimit
        self.queues = queues
    }


}

