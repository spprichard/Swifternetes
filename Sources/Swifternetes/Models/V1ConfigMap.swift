//
// V1ConfigMap.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation


/** ConfigMap holds configuration data for pods to consume. */

public struct V1ConfigMap: Codable {

    /** APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources */
    public var apiVersion: String?
    /** BinaryData contains the binary data. Each key must consist of alphanumeric characters, &#39;-&#39;, &#39;_&#39; or &#39;.&#39;. BinaryData can contain byte sequences that are not in the UTF-8 range. The keys stored in BinaryData must not overlap with the ones in the Data field, this is enforced during validation process. Using this field will require 1.10+ apiserver and kubelet. */
    public var binaryData: [String:Data]?
    /** Data contains the configuration data. Each key must consist of alphanumeric characters, &#39;-&#39;, &#39;_&#39; or &#39;.&#39;. Values with non-UTF-8 byte sequences must use the BinaryData field. The keys stored in Data must not overlap with the keys in the BinaryData field, this is enforced during validation process. */
    public var data: [String:String]?
    /** Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds */
    public var kind: String?
    public var metadata: V1ObjectMeta?

    public init(apiVersion: String?, binaryData: [String:Data]?, data: [String:String]?, kind: String?, metadata: V1ObjectMeta?) {
        self.apiVersion = apiVersion
        self.binaryData = binaryData
        self.data = data
        self.kind = kind
        self.metadata = metadata
    }


}

