//
// V1OwnerReference.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation


/** OwnerReference contains enough information to let you identify an owning object. An owning object must be in the same namespace as the dependent, or be cluster-scoped, so there is no namespace field. */

public struct V1OwnerReference: Codable {

    /** API version of the referent. */
    public var apiVersion: String
    /** If true, AND if the owner has the \&quot;foregroundDeletion\&quot; finalizer, then the owner cannot be deleted from the key-value store until this reference is removed. Defaults to false. To set this field, a user needs \&quot;delete\&quot; permission of the owner, otherwise 422 (Unprocessable Entity) will be returned. */
    public var blockOwnerDeletion: Bool?
    /** If true, this reference points to the managing controller. */
    public var controller: Bool?
    /** Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds */
    public var kind: String
    /** Name of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#names */
    public var name: String
    /** UID of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#uids */
    public var uid: String

    public init(apiVersion: String, blockOwnerDeletion: Bool?, controller: Bool?, kind: String, name: String, uid: String) {
        self.apiVersion = apiVersion
        self.blockOwnerDeletion = blockOwnerDeletion
        self.controller = controller
        self.kind = kind
        self.name = name
        self.uid = uid
    }


}

